// <auto-generated />
using System;
using Logisticsm.Repository.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Logisticsm.Migrations
{
    [DbContext(typeof(OrderDbContext))]
    [Migration("20230314143453_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Logisticsm.Repository.Entities.AirTransport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Batch")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("batch");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    b.Property<DateTime?>("InsertDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("insert_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("member_id");

                    b.Property<string>("OrderNumber")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("order_number");

                    b.Property<DateTime?>("SendDate")
                        .HasColumnType("datetime")
                        .HasColumnName("send_date");

                    b.Property<string>("SourcePlace")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("source_place");

                    b.Property<string>("Tag")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("tag");

                    b.Property<string>("TargetPlace")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("target_place");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("AirTransport");
                });

            modelBuilder.Entity("Logisticsm.Repository.Entities.AirTransportDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AirTransportId")
                        .HasColumnType("int")
                        .HasColumnName("air_transport_id");

                    b.Property<int?>("Count")
                        .HasColumnType("int")
                        .HasColumnName("count");

                    b.Property<double?>("Height")
                        .HasColumnType("float")
                        .HasColumnName("height");

                    b.Property<DateTime?>("InsertDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("insert_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<double?>("Length")
                        .HasColumnType("float")
                        .HasColumnName("length");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("member_id");

                    b.Property<DateTime?>("ReceiveDate")
                        .HasColumnType("datetime")
                        .HasColumnName("receive_date");

                    b.Property<string>("Tag")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("tag");

                    b.Property<double?>("Volume")
                        .HasColumnType("float")
                        .HasColumnName("volume");

                    b.Property<double?>("Weight")
                        .HasColumnType("float")
                        .HasColumnName("weight");

                    b.Property<double?>("Width")
                        .HasColumnType("float")
                        .HasColumnName("width");

                    b.HasKey("Id");

                    b.HasIndex("AirTransportId");

                    b.ToTable("AirTransportDetail");
                });

            modelBuilder.Entity("Logisticsm.Repository.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("address");

                    b.Property<string>("Description")
                        .HasColumnType("ntext")
                        .HasColumnName("description");

                    b.Property<DateTime?>("InsertDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("insert_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("member_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Nation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nation");

                    b.Property<string>("Tag")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("tag");

                    b.Property<string>("Telphone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("telphone");

                    b.HasKey("Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Logisticsm.Repository.Entities.ExpressTransport", b =>
                {
                    b.Property<string>("Channel")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("channel");

                    b.Property<double>("CostWeight")
                        .HasColumnType("float")
                        .HasColumnName("cost_weight");

                    b.Property<int>("Count")
                        .HasColumnType("int")
                        .HasColumnName("count");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime")
                        .HasColumnName("insert_date");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("member_id");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("order_number");

                    b.Property<double>("Price")
                        .HasColumnType("float")
                        .HasColumnName("price");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime")
                        .HasColumnName("send_date");

                    b.Property<string>("SourcePlace")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("source_place");

                    b.Property<string>("Tag")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("tag");

                    b.Property<string>("TargetPlace")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("target_place");

                    b.Property<double>("Volume")
                        .HasColumnType("float")
                        .HasColumnName("volume");

                    b.Property<double>("Weight")
                        .HasColumnType("float")
                        .HasColumnName("weight");

                    b.ToTable("ExpressTransport");
                });

            modelBuilder.Entity("Logisticsm.Repository.Entities.ExpressTransportDetail", b =>
                {
                    b.Property<int>("ExpressTransportId")
                        .HasColumnType("int")
                        .HasColumnName("express_transport_id");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("InsertDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("insert_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("member_id");

                    b.Property<string>("Productor")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("productor");

                    b.Property<DateTime>("ReceiveDate")
                        .HasColumnType("datetime")
                        .HasColumnName("receive_date");

                    b.Property<string>("Tag")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("tag");

                    b.ToTable("ExpressTransportDetail");
                });

            modelBuilder.Entity("Logisticsm.Repository.Entities.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("InsertDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("insert_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("Level")
                        .HasColumnType("int")
                        .HasColumnName("level");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasColumnName("password");

                    b.Property<string>("Tag")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("tag");

                    b.HasKey("Id");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("Logisticsm.Repository.Entities.SeaTransport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Batch")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("batch");

                    b.Property<string>("BoxModel")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("box_model");

                    b.Property<string>("BoxNumber")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("box_number");

                    b.Property<int?>("Count")
                        .HasColumnType("int")
                        .HasColumnName("count");

                    b.Property<int?>("CustomerId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    b.Property<DateTime?>("InsertDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("insert_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("member_id");

                    b.Property<DateTime?>("SendDate")
                        .HasColumnType("datetime")
                        .HasColumnName("send_date");

                    b.Property<string>("SourcePlace")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("source_place");

                    b.Property<string>("Tag")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("tag");

                    b.Property<string>("TargetPlace")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("target_place");

                    b.Property<double?>("Volume")
                        .HasColumnType("float")
                        .HasColumnName("volume");

                    b.Property<double?>("Weight")
                        .HasColumnType("float")
                        .HasColumnName("weight");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("SeaTransport");
                });

            modelBuilder.Entity("Logisticsm.Repository.Entities.SeaTransportDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Count")
                        .HasColumnType("int")
                        .HasColumnName("count");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime")
                        .HasColumnName("insert_date");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("member_id");

                    b.Property<string>("Productor")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("productor");

                    b.Property<DateTime?>("ReceiveDate")
                        .HasColumnType("datetime")
                        .HasColumnName("receive_date");

                    b.Property<int>("SeaTransportId")
                        .HasColumnType("int")
                        .HasColumnName("sea_transport_id");

                    b.Property<string>("Tag")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("tag");

                    b.Property<double?>("Volume")
                        .HasColumnType("float")
                        .HasColumnName("volume");

                    b.HasKey("Id");

                    b.HasIndex("SeaTransportId");

                    b.ToTable("SeaTransportDetail");
                });

            modelBuilder.Entity("Logisticsm.Repository.Entities.AirTransport", b =>
                {
                    b.HasOne("Logisticsm.Repository.Entities.Customer", "Customer")
                        .WithMany("AirTransports")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_AirTransport_Customer");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Logisticsm.Repository.Entities.AirTransportDetail", b =>
                {
                    b.HasOne("Logisticsm.Repository.Entities.AirTransport", "AirTransport")
                        .WithMany("AirTransportDetails")
                        .HasForeignKey("AirTransportId")
                        .HasConstraintName("FK_AirTransportDetail_AirTransport");

                    b.Navigation("AirTransport");
                });

            modelBuilder.Entity("Logisticsm.Repository.Entities.SeaTransport", b =>
                {
                    b.HasOne("Logisticsm.Repository.Entities.Customer", "Customer")
                        .WithMany("SeaTransports")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK_SeaTransport_Customer");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Logisticsm.Repository.Entities.SeaTransportDetail", b =>
                {
                    b.HasOne("Logisticsm.Repository.Entities.SeaTransport", "SeaTransport")
                        .WithMany("SeaTransportDetails")
                        .HasForeignKey("SeaTransportId")
                        .IsRequired()
                        .HasConstraintName("FK_SeaTransportDetail_SeaTransport");

                    b.Navigation("SeaTransport");
                });

            modelBuilder.Entity("Logisticsm.Repository.Entities.AirTransport", b =>
                {
                    b.Navigation("AirTransportDetails");
                });

            modelBuilder.Entity("Logisticsm.Repository.Entities.Customer", b =>
                {
                    b.Navigation("AirTransports");

                    b.Navigation("SeaTransports");
                });

            modelBuilder.Entity("Logisticsm.Repository.Entities.SeaTransport", b =>
                {
                    b.Navigation("SeaTransportDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
